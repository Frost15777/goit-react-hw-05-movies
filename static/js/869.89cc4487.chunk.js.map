{"version":3,"file":"static/js/869.89cc4487.chunk.js","mappings":"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","sources":["Api.jsx","components/MovieList/MoviesList.styled.jsx","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '29c392bc2e116e7e67a692babd8dc83d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\n\nexport const handleSearch = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n  return response.data.results;\n};","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport propTypes from 'prop-types';\nimport { FaFilm } from 'react-icons/fa';\nimport placeholder from '../images/placeholder.png';\n\nexport const List = styled.ul`\n  list-style: none;\n  font-size: 1.1rem;\n  font-weight: 500;\n`;\n\nexport const Item = styled.li`\n  padding: 5px 12px;\n  border-bottom: 1px solid transparent;\n  position: relative;\n`;\n\nexport const LinkDetails = styled(Link)`\n  color: #000;\n  text-decoration: none;\n  margin: 1px;\n\n  &:hover,\n  &:focus {\n    color: #064e8a;\n  }\n\n  @media screen and (min-width: 768px) {\n    &:hover::after,\n    &:focus::after {\n      content: '';\n      background-image: ${props =>\n        props.cover\n          ? `url('https://image.tmdb.org/t/p/w500/${props.cover}')`\n          : `url(${placeholder})`};\n\n      background-size: cover;\n      width: 160px;\n      height: 240px;\n      display: block;\n      border-radius: 4px;\n      border: 1px solid rgba(43, 134, 197);\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: absolute;\n      top: -140px;\n      left: 400px;\n      z-index: 1;\n    }\n  }\n`;\n\nexport const LogoIcon = styled(FaFilm)`\n  width: 20px;\n  height: 20px;\n  position: relative;\n  right: 6px;\n  top: 5px;\n  z-index: 1;\n  opacity: 0.7;\n`;\n\nLinkDetails.propTypes = {\n  cover: propTypes.string,\n  placeholder: propTypes.string,\n};\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, LinkDetails, LogoIcon } from './MoviesList.styled';\n\nconst MovieList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {films.map(movie => (\n        <Item key={movie.id}>\n          <LinkDetails\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n            cover={movie.poster_path}\n          >\n            <LogoIcon /> {movie.title}\n          </LinkDetails>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\nimport { FcSearch } from 'react-icons/fc';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 1.5rem;\n  padding: 0 16px;\n  flex-wrap: wrap;\n\n  input {\n    font-size: 1rem;\n    padding: 8px 32px 8px 8px;\n    width: 250px;\n    background-color: transparent;\n    border: none;\n    border-bottom: 2px solid #064e8a;\n    outline: none;\n  }\n`;\n\nexport const Icon = styled(FcSearch)`\n  width: 25px;\n  height: 25px;\n  position: relative;\n  right: 56px;\n  z-index: 1;\n  opacity: 0.7;\n`;","import { DebounceInput } from 'react-debounce-input';\nimport propTypes from 'prop-types';\nimport { Form, Icon } from './SearchForm.styled';\n\nexport const SearchForm = ({ value, onChange }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <h2>Movie Search</h2>\n      <DebounceInput\n        type=\"text\"\n        debounceTimeout={500}\n        value={value}\n        onChange={e => onChange(e.target.value)}\n        placeholder=\"type here\"\n      />\n      <Icon />\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  value: propTypes.string,\n  onChange: propTypes.func,\n};","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css';\nimport { handleSearch } from 'Api';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') || '';\n  const [loading, setLoading] = useState(false);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' && { query };\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    const search = async () => {\n      try {\n        setLoading(true);\n        const movies = await handleSearch(movieName);\n        setSearchResults(movies);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    search();\n  }, [movieName]);\n\n  return (\n    <div>\n      <SkeletonTheme baseColor=\"#dddddd\" highlightColor=\"#a5a5a5\">\n        <SearchForm value={movieName} onChange={updateQueryString} />\n        {loading ? (\n          <Skeleton\n            count={15}\n            style={{ height: 30, width: 300, marginTop: 15 }}\n          />\n        ) : searchResults.length === 0 && movieName ? (\n          <h2>Nothing found</h2>\n        ) : (\n          <MovieList films={searchResults} />\n        )}\n      </SkeletonTheme>\n    </div>\n  );\n};\n\nexport default Movies;"],"names":["axios","params","api_key","language","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchMovieDetails","_ref2","_callee2","movieId","_context2","concat","_x","handleSearch","_ref3","_callee3","movieName","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","LinkDetails","Link","_templateObject3","props","cover","placeholder","LogoIcon","FaFilm","_templateObject4","propTypes","films","location","useLocation","_jsx","children","map","movie","_jsxs","to","id","state","from","poster_path","title","Form","Icon","FcSearch","SearchForm","value","onChange","onSubmit","e","preventDefault","DebounceInput","type","debounceTimeout","target","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","_useState3","_useState4","loading","setLoading","useEffect","search","movies","t0","console","error","finish","SkeletonTheme","baseColor","highlightColor","query","Skeleton","count","style","height","width","marginTop","length","MovieList"],"sourceRoot":""}